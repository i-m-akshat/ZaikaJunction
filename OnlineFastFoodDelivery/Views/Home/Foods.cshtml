@model Models.ViewModel.HomePageViewModel

@{
    ViewData["Title"] = "Foods";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid my-5 py-5">
    <!-- Search Bar -->
    <div class="row my-4 mx-2">
        <div class="col-md-12">
            <div class="d-flex justify-content-center align-items-center shadow rounded-pill bg-dark px-3 py-2">
                <input class="form-control form-control-sm bg-dark text-light border-0 rounded-start-pill me-2"
                       type="search"
                       id="tags"
                       placeholder="Search food..."
                       aria-label="Search"
                       style="box-shadow: none;" />
                <button class="btn btn-outline-light btn-sm rounded-pill px-3"
                        onclick="goToFoodDetails()">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>
            </div>
        </div>
    </div>


    <!-- Filter Button -->
    <div class="row my-3">
        <div class="col-md-12">
            

            <!-- Offcanvas Filter Panel -->
            <div class="offcanvas offcanvas-end" tabindex="-1" id="filterOffcanvas" aria-labelledby="filterOffcanvasLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="filterOffcanvasLabel">
                        <i class="fas fa-filter me-2"></i> Filters
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <form id="dynamicFilterForm">
                        <!-- Categories -->
                        <label class="form-label">Category</label>
                        <div id="chk_Cat" class="mb-4">
                           
                            @foreach (var category in Model.Categories)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@category.CatId" id="cat_@category.CatId">
                                    <label class="form-check-label" for="cat_@category.CatId">
                                        @category.CatName
                                    </label>
                                </div>
                            }
                        </div>

                        <!-- Subcategories -->
                        <label class="form-label">Sub Category</label>
                        <div id="check_SubCat" class=" mb-4">
                           
                            @foreach (var sub in Model.SubCategories)
                            {
                               <div class="form-check">
                                    <input class="form-check-input" id="sub_@sub.SubCatid" type="checkbox" value="@sub.SubCatid" />
                                    <label class="form-check-label" for="sub_@sub.SubCatid">@sub.SubCatName</label>
                                   
                                </div>
                            }
                        </div>

                        <!-- Food Types -->
                        <label class="form-label">Food Types</label>
                        <div id="chk_FoodType" class="mb-4">
                          
                            @foreach (var foodType in Model.FoodTypes)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@foodType.FoodTypeId" id="type_@foodType.FoodTypeId">
                                    <label class="form-check-label" for="type_@foodType.FoodTypeId">
                                        @foodType.FoodTypeName
                                    </label>
                                </div>
                            }
                        </div>


                        <!-- Price Range -->
                     @*    <div class="mb-4">
                            <label for="priceRange" class="form-label">Price Range</label>
                            <input type="range" class="form-range" id="priceRange" min="0" max="100" value="100">
                            <div class="d-flex justify-content-between">
                                <span>$0</span>
                                <span>Max $<span id="priceRangeValue">100</span></span>
                            </div>
                        </div> *@

                        <!-- Rating Filter -->
                       @*  <div class="mb-4">
                            <label for="ratingFilter" class="form-label">Min Rating</label>
                            <select class="form-select" id="ratingFilter">
                                <option value="0">Any Rating</option>
                                <option value="4">4 Stars & Up</option>
                                <option value="3">3 Stars & Up</option>
                            </select>
                        </div> *@

                        <div class="d-flex justify-content-center">
                            <a id="btnRemove" class="btn btn-sm btn-filter-apply me-3" asp-controller="Home" asp-action="Foods">Remove Filters</a>
                            <button type="button" id="btnApply" class="btn btn-sm btn-filter-apply">Apply Filters</button>
                        </div>

                    </form>
                </div>
            </div>

        </div>
    </div>

    <!-- Food Cards Grid -->
    <section class="section-padding">
        <h2 class="section-title px-4">Explore Our Delicious Menu</h2>
        <div class="mb-4 d-flex justify-content-end">
            <button class="btn btn-filter" type="button" data-bs-toggle="offcanvas" data-bs-target="#filterOffcanvas" aria-controls="filterOffcanvas">
                <i class="fas fa-filter me-2"></i> Filters
            </button>
        </div>
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 px-4" id="FoodRow">
            @Html.Partial("_Food", Model.Food)
        </div>
    </section>
</div>

<script type="text/javascript">
    var listCat = [];
    var listSubCat = [];
    var listFoodType = [];

    // Category checkbox change
    $('#chk_Cat').on('change', 'input[type=checkbox]', function () {
        listCat = $('#chk_Cat input[type=checkbox]:checked').map(function () {
            return $(this).val();
        }).get();

        $.ajax({
            url: 'Home/getSubCategoryBasedOnCat',
            method: 'POST',
            data: { list: listCat },
            success: function (data) {
                $('#check_SubCat').empty();

                if (data && data.length > 0) {
                    data.forEach(function (item) {
                       let listItem = `
            <div class="form-check">
                <input class="form-check-input" id="sub_${item.subCatid}" type="checkbox" value="${item.subCatid}" />
                <label class="form-check-label" for="sub_${item.subCatid}">${item.subCatName}</label>
            </div>`;
                        $('#check_SubCat').append(listItem);
                    });
                }
            },
            error: function (err) {
                console.error('Sub-category fetch error:', err);
            }
        });
    });

    // SubCategory checkbox change
    $('#check_SubCat').on('change', 'input[type=checkbox]', function () {
        listSubCat = $('#check_SubCat input[type=checkbox]:checked').map(function () {
            return $(this).val();
        }).get();
        console.log('SubCat:', listSubCat);
    });

    // Food Type checkbox change
    $('#chk_FoodType').on('change', 'input[type=checkbox]', function () {
        listFoodType = $('#chk_FoodType input[type=checkbox]:checked').map(function () {
            return $(this).val();
        }).get();
        console.log('FoodType:', listFoodType);
    });

    // Apply Filters
    $('#btnApply').on('click', function () {
        $.ajax({
            url: 'Home/Filter',
            method: 'POST',
            data: {
                listCat: listCat,
                listSubCat: listSubCat,
                listFoodType: listFoodType
            },
            success: function (response) {
                $('#FoodRow').html(response);
            },
            error: function (err) {
                console.error('Filter error:', err);
            }
        });
    });

    // Go to Food Details
    function goToFoodDetails() {
        var foodName = $('#tags').val();
        if (!foodName.trim()) return;

        $.ajax({
            url: `Home/getFoodIDbyName?FoodName=${encodeURIComponent(foodName)}`,
            method: 'GET',
            success: function (result) {
                if (result && result != 0) {
                    window.location.href = `Home/FoodDetails?FoodID=${result}`;
                } else {
                    swal("Not Available!", "This item is not available.", "error");
                }
            },
            error: function (err) {
                console.error('Search error:', err);
            }
        });
    }

    // Global variable to store food names for autocomplete
    var availableTags = [];

    // Fetch food names and initialize autocomplete
    $(document).ready(function () {
        $.ajax({
            url: 'Home/getAllFoodsName',
            type: 'GET',
            success: function (result) {
                availableTags = result;
                $("#tags").autocomplete({
                    minLength: 0,
                    source: availableTags
                });
            },
            error: function (err) {
                console.error('Autocomplete fetch error:', err);
            }
        });

        // Attach search function to global scope
        window.goToFoodDetails = goToFoodDetails;
    });
</script>
